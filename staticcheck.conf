# staticcheck.conf - Configuration for staticcheck advanced Go code analysis

# Enable all default checks (SA*)
checks = ["all", "-ST*"]

# Enable additional security and quality checks
checks = ["all", "-ST*", "S*", "U*", "QF*"]

# Disable specific checks that are too noisy for this project
checks = ["all", "-ST*", "S*", "U*", "QF*", "-SA4006", "-SA9003"]

# File patterns to ignore
ignore = [
  # Ignore test files for certain checks that are too strict
  "*_test.go:SA1019", # Ignore deprecation warnings in tests
  "*_test.go:SA4006", # Ignore unused variables in tests that may be for clarity
  
  # Ignore generated files
  "*.pb.go",
  "*_generated.go",
  
  # Ignore vendor directory
  "vendor/*",
  
  # Ignore testdata directories
  "testdata/*",
  "**/testdata/*"
]

# Output format - can be 'text', 'json', 'stylish', 'unix', 'sarif'
output_format = "json"

# Minimum confidence level (0.0 to 1.0)
minimum_confidence = 0.8

# Enable experimental checks
experimental = false

# Go version to target for analysis
go_version = "1.21"

# Enable suggestions for simplifications
suggest_simplifications = true

# Check for unused parameters in functions
unused_parameters = true

# Check for unused variables
unused_variables = true

# Check for unused constants
unused_constants = true

# Check for unused functions
unused_functions = true

# Enable security-focused checks
security_checks = [
  "S1000", # Use plain channel send or receive instead of single-case select
  "S1001", # Replace for loop with call to copy
  "S1002", # Omit comparison with boolean constant
  "S1003", # Replace call to strings.Index with strings.Contains
  "S1004", # Replace call to bytes.Compare with bytes.Equal
  "S1005", # Drop unnecessary use of the blank identifier
  "S1006", # Use for { ... } for infinite loops
  "S1007", # Simplify regular expression by using raw string literal
  "S1008", # Simplify returning boolean expression
  "S1009", # Omit redundant nil check on slices
  "S1010", # Omit default slice index
  "S1011", # Use a single append to concatenate two slices
  "S1012", # Replace time.Now().Sub(x) with time.Since(x)
  "S1016", # Use a type conversion instead of manually copying struct fields
  "S1017", # Replace manual trimming with strings.TrimPrefix
  "S1018", # Use copy for sliding elements in a slice
  "S1019", # Simplify make call by omitting redundant arguments
  "S1020", # Omit redundant nil check in type assertion
  "S1021", # Merge variable declaration and assignment
  "S1023", # Omit redundant control flow
  "S1024", # Replace x.Sub(time.Now()) with time.Until(x)
  "S1025", # Don't use fmt.Sprintf("%s", x) unnecessarily
  "S1028", # Simplify error construction with fmt.Errorf
  "S1029", # Range over the string directly
  "S1030", # Use bytes.Buffer.String or bytes.Buffer.Bytes
  "S1031", # Omit redundant nil check around loop
  "S1032", # Use sort.Ints(x), sort.Float64s(x), and sort.Strings(x)
  "S1033", # Unnecessary guard around call to append
  "S1034", # Use result of type assertion to simplify cases
  "S1035", # Redundant call to net/url.Parse
  "S1036", # Unnecessary guard around map access
  "S1037", # Elaborate way of sleeping
  "S1038", # Unnecessarily complex way of printing formatted string
  "S1039", # Unnecessary use of fmt.Sprint
  "S1040"  # Type assertion on static type
]
